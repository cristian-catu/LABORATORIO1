

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Jul 23 09:34:20 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  0008                     	;# 
   462  0009                     	;# 
   463  000A                     	;# 
   464  000B                     	;# 
   465  000C                     	;# 
   466  000D                     	;# 
   467  000E                     	;# 
   468  000E                     	;# 
   469  000F                     	;# 
   470  0010                     	;# 
   471  0011                     	;# 
   472  0012                     	;# 
   473  0013                     	;# 
   474  0014                     	;# 
   475  0015                     	;# 
   476  0015                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001B                     	;# 
   484  001C                     	;# 
   485  001D                     	;# 
   486  001E                     	;# 
   487  001F                     	;# 
   488  0081                     	;# 
   489  0085                     	;# 
   490  0086                     	;# 
   491  0087                     	;# 
   492  0088                     	;# 
   493  0089                     	;# 
   494  008C                     	;# 
   495  008D                     	;# 
   496  008E                     	;# 
   497  008F                     	;# 
   498  0090                     	;# 
   499  0091                     	;# 
   500  0092                     	;# 
   501  0093                     	;# 
   502  0093                     	;# 
   503  0093                     	;# 
   504  0094                     	;# 
   505  0095                     	;# 
   506  0096                     	;# 
   507  0097                     	;# 
   508  0098                     	;# 
   509  0099                     	;# 
   510  009A                     	;# 
   511  009B                     	;# 
   512  009C                     	;# 
   513  009D                     	;# 
   514  009E                     	;# 
   515  009F                     	;# 
   516  0105                     	;# 
   517  0107                     	;# 
   518  0108                     	;# 
   519  0109                     	;# 
   520  010C                     	;# 
   521  010C                     	;# 
   522  010D                     	;# 
   523  010E                     	;# 
   524  010F                     	;# 
   525  0185                     	;# 
   526  0187                     	;# 
   527  0188                     	;# 
   528  0189                     	;# 
   529  018C                     	;# 
   530  018D                     	;# 
   531                           
   532                           	psect	idataBANK0
   533  0332                     __pidataBANK0:
   534                           
   535                           ;initializer for _bandera
   536  0332  3401               	retlw	1
   537  001B                     _CCPR2L	set	27
   538  0015                     _CCPR1L	set	21
   539  001D                     _CCP2CONbits	set	29
   540  001D                     _CCP2CON	set	29
   541  0017                     _CCP1CONbits	set	23
   542  0017                     _CCP1CON	set	23
   543  0001                     _TMR0	set	1
   544  001E                     _ADRESH	set	30
   545  001F                     _ADCON0bits	set	31
   546  0012                     _T2CONbits	set	18
   547  0007                     _PORTC	set	7
   548  0005                     _PORTA	set	5
   549  0008                     _PORTD	set	8
   550  000C                     _PIR1bits	set	12
   551  0005                     _PORTAbits	set	5
   552  000B                     _INTCONbits	set	11
   553  0092                     _PR2	set	146
   554  0087                     _TRISCbits	set	135
   555  0081                     _OPTION_REGbits	set	129
   556  009F                     _ADCON1bits	set	159
   557  008C                     _PIE1bits	set	140
   558  0088                     _TRISD	set	136
   559  0087                     _TRISC	set	135
   560  0085                     _TRISA	set	133
   561  008F                     _OSCCONbits	set	143
   562  0188                     _ANSEL	set	392
   563                           
   564                           	psect	cinit
   565  0013                     start_initialization:	
   566                           ; #config settings
   567                           
   568  0013                     __initialization:
   569                           
   570                           ; Initialize objects allocated to BANK0
   571  0013  120A  118A  2332  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   572  0018  00A6               	movwf	__pdataBANK0& (0+127)
   573                           
   574                           ; Clear objects allocated to COMMON
   575  0019  01FC               	clrf	__pbssCOMMON& (0+127)
   576  001A  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   577  001B                     end_of_initialization:	
   578                           ;End of C runtime variable initialization code
   579                           
   580  001B                     __end_of__initialization:
   581  001B  0183               	clrf	3
   582  001C  120A  118A  2B0C   	ljmp	_main	;jump to C main() function
   583                           
   584                           	psect	bssCOMMON
   585  007C                     __pbssCOMMON:
   586  007C                     _ciclo_trabajo:
   587  007C                     	ds	1
   588  007D                     _contador:
   589  007D                     	ds	1
   590                           
   591                           	psect	dataBANK0
   592  0026                     __pdataBANK0:
   593  0026                     _bandera:
   594  0026                     	ds	1
   595                           
   596                           	psect	cstackCOMMON
   597  0070                     __pcstackCOMMON:
   598  0070                     ?_tmr0_reload:
   599  0070                     ?_setup:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_adc_start:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_pwm_init:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_init_osc_MHz:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_isr:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_main:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?i1_tmr0_reload:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ??i1_tmr0_reload:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?i1_pwm_duty_cycle:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_adc_read:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     i1pwm_duty_cycle@duty_cycle:	
   630                           ; 2 bytes @ 0x0
   631                           
   632                           
   633                           ; 2 bytes @ 0x0
   634  0070                     	ds	2
   635  0072                     ??_adc_read:
   636  0072                     i1pwm_duty_cycle@channel:	
   637                           ; 1 bytes @ 0x2
   638                           
   639                           
   640                           ; 1 bytes @ 0x2
   641  0072                     	ds	1
   642  0073                     ??i1_pwm_duty_cycle:
   643                           
   644                           ; 1 bytes @ 0x3
   645  0073                     	ds	3
   646  0076                     ??_isr:
   647                           
   648                           ; 1 bytes @ 0x6
   649  0076                     	ds	6
   650                           
   651                           	psect	cstackBANK0
   652  0020                     __pcstackBANK0:
   653  0020                     ??_tmr0_reload:
   654  0020                     ?_pwm_duty_cycle:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0020                     ??_adc_start:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0020                     ?_tmr0_init:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0020                     ??_pwm_init:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0020                     ?_adc_init:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0020                     ??_init_osc_MHz:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0020                     adc_init@vref_plus:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0020                     tmr0_init@prescaler:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0020                     pwm_duty_cycle@duty_cycle:	
   679                           ; 2 bytes @ 0x0
   680                           
   681                           
   682                           ; 2 bytes @ 0x0
   683  0020                     	ds	1
   684  0021                     adc_init@vref_minus:
   685  0021                     adc_start@channel:	
   686                           ; 1 bytes @ 0x1
   687                           
   688                           
   689                           ; 1 bytes @ 0x1
   690  0021                     	ds	1
   691  0022                     ??_tmr0_init:
   692  0022                     ??_adc_init:	
   693                           ; 1 bytes @ 0x2
   694                           
   695  0022                     init_osc_MHz@freq:	
   696                           ; 1 bytes @ 0x2
   697                           
   698  0022                     pwm_init@channel:	
   699                           ; 1 bytes @ 0x2
   700                           
   701  0022                     pwm_duty_cycle@channel:	
   702                           ; 1 bytes @ 0x2
   703                           
   704                           
   705                           ; 1 bytes @ 0x2
   706  0022                     	ds	1
   707  0023                     ??_pwm_duty_cycle:
   708                           
   709                           ; 1 bytes @ 0x3
   710  0023                     	ds	1
   711  0024                     adc_init@adc_cs:
   712                           
   713                           ; 1 bytes @ 0x4
   714  0024                     	ds	2
   715  0026                     ??_setup:
   716  0026                     ??_main:	
   717                           ; 1 bytes @ 0x6
   718                           
   719                           
   720                           	psect	maintext
   721  030C                     __pmaintext:	
   722                           ; 1 bytes @ 0x6
   723 ;;
   724 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   725 ;;
   726 ;; *************** function _main *****************
   727 ;; Defined at:
   728 ;;		line 84 in file "main.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;		None
   731 ;; Auto vars:     Size  Location     Type
   732 ;;		None
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   737 ;; Tracked objects:
   738 ;;		On entry : B00/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   742 ;;      Params:         0       0       0       0       0
   743 ;;      Locals:         0       0       0       0       0
   744 ;;      Temps:          0       0       0       0       0
   745 ;;      Totals:         0       0       0       0       0
   746 ;;Total ram usage:        0 bytes
   747 ;; Hardware stack levels required when called: 4
   748 ;; This function calls:
   749 ;;		_adc_start
   750 ;;		_setup
   751 ;; This function is called by:
   752 ;;		Startup code after reset
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756  030C                     _main:	
   757                           ;psect for function _main
   758                           
   759  030C                     l1390:	
   760                           ;incstack = 0
   761                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   762                           
   763                           
   764                           ;main.c: 85:     setup();
   765  030C  120A  118A  2093  120A  118A  	fcall	_setup
   766  0311                     l1392:
   767                           
   768                           ;main.c: 88:         adc_start(12);
   769  0311  300C               	movlw	12
   770  0312  120A  118A  22E8  120A  118A  	fcall	_adc_start
   771  0317  2B11               	goto	l1392
   772  0318  120A  118A  2810   	ljmp	start
   773  031B                     __end_of_main:
   774                           
   775                           	psect	text1
   776  0093                     __ptext1:	
   777 ;; *************** function _setup *****************
   778 ;; Defined at:
   779 ;;		line 96 in file "main.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   793 ;;      Params:         0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0
   796 ;;      Totals:         0       0       0       0       0
   797 ;;Total ram usage:        0 bytes
   798 ;; Hardware stack levels used: 1
   799 ;; Hardware stack levels required when called: 3
   800 ;; This function calls:
   801 ;;		_adc_init
   802 ;;		_init_osc_MHz
   803 ;;		_pwm_duty_cycle
   804 ;;		_pwm_init
   805 ;;		_tmr0_init
   806 ;;		_tmr0_reload
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812  0093                     _setup:	
   813                           ;psect for function _setup
   814                           
   815  0093                     l1290:	
   816                           ;incstack = 0
   817                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   818                           
   819                           
   820                           ;main.c: 97:     ANSEL = 0;
   821  0093  1683               	bsf	3,5	;RP0=1, select bank3
   822  0094  1703               	bsf	3,6	;RP1=1, select bank3
   823  0095  0188               	clrf	8	;volatile
   824                           
   825                           ;main.c: 98:     TRISA = 0;
   826  0096  1683               	bsf	3,5	;RP0=1, select bank1
   827  0097  1303               	bcf	3,6	;RP1=0, select bank1
   828  0098  0185               	clrf	5	;volatile
   829                           
   830                           ;main.c: 99:     PORTA = 0;
   831  0099  1283               	bcf	3,5	;RP0=0, select bank0
   832  009A  1303               	bcf	3,6	;RP1=0, select bank0
   833  009B  0185               	clrf	5	;volatile
   834                           
   835                           ;main.c: 100:     TRISC = 0;
   836  009C  1683               	bsf	3,5	;RP0=1, select bank1
   837  009D  1303               	bcf	3,6	;RP1=0, select bank1
   838  009E  0187               	clrf	7	;volatile
   839                           
   840                           ;main.c: 101:     PORTC = 0;
   841  009F  1283               	bcf	3,5	;RP0=0, select bank0
   842  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   843  00A1  0187               	clrf	7	;volatile
   844                           
   845                           ;main.c: 102:     TRISD = 0;
   846  00A2  1683               	bsf	3,5	;RP0=1, select bank1
   847  00A3  1303               	bcf	3,6	;RP1=0, select bank1
   848  00A4  0188               	clrf	8	;volatile
   849                           
   850                           ;main.c: 103:     PORTD = 0;
   851  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   852  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   853  00A7  0188               	clrf	8	;volatile
   854  00A8                     l1292:
   855                           
   856                           ;main.c: 104:     init_osc_MHz(4);
   857  00A8  3004               	movlw	4
   858  00A9  120A  118A  226A  120A  118A  	fcall	_init_osc_MHz
   859  00AE                     l1294:
   860                           
   861                           ;main.c: 105:     tmr0_reload();
   862  00AE  120A  118A  2326  120A  118A  	fcall	_tmr0_reload
   863  00B3                     l1296:
   864                           
   865                           ;main.c: 106:     tmr0_init(256);
   866  00B3  3000               	movlw	0
   867  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   868  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   869  00B6  00A0               	movwf	tmr0_init@prescaler
   870  00B7  3001               	movlw	1
   871  00B8  00A1               	movwf	tmr0_init@prescaler+1
   872  00B9  120A  118A  2104  120A  118A  	fcall	_tmr0_init
   873  00BE                     l1298:
   874                           
   875                           ;main.c: 107:     pwm_init(1);
   876  00BE  3001               	movlw	1
   877  00BF  120A  118A  22B5  120A  118A  	fcall	_pwm_init
   878  00C4                     l1300:
   879                           
   880                           ;main.c: 108:     pwm_duty_cycle(4,1);
   881  00C4  3004               	movlw	4
   882  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   883  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   884  00C7  00A0               	movwf	pwm_duty_cycle@duty_cycle
   885  00C8  3000               	movlw	0
   886  00C9  00A1               	movwf	pwm_duty_cycle@duty_cycle+1
   887  00CA  01A2               	clrf	pwm_duty_cycle@channel
   888  00CB  0AA2               	incf	pwm_duty_cycle@channel,f
   889  00CC  120A  118A  21C4  120A  118A  	fcall	_pwm_duty_cycle
   890  00D1                     l1302:
   891                           
   892                           ;main.c: 109:     INTCONbits.PEIE = 1;
   893  00D1  170B               	bsf	11,6	;volatile
   894  00D2                     l1304:
   895                           
   896                           ;main.c: 110:     INTCONbits.GIE = 1;
   897  00D2  178B               	bsf	11,7	;volatile
   898  00D3                     l1306:
   899                           
   900                           ;main.c: 111:     INTCONbits.T0IE = 1;
   901  00D3  168B               	bsf	11,5	;volatile
   902  00D4                     l1308:
   903                           
   904                           ;main.c: 113:     adc_init(1,0,0);
   905  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   906  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   907  00D6  01A0               	clrf	adc_init@vref_plus
   908  00D7  01A1               	clrf	adc_init@vref_minus
   909  00D8  3001               	movlw	1
   910  00D9  120A  118A  221E  120A  118A  	fcall	_adc_init
   911  00DE                     l1310:
   912                           
   913                           ;main.c: 114:     pwm_duty_cycle(1,1);
   914  00DE  3001               	movlw	1
   915  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   916  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   917  00E1  00A0               	movwf	pwm_duty_cycle@duty_cycle
   918  00E2  3000               	movlw	0
   919  00E3  00A1               	movwf	pwm_duty_cycle@duty_cycle+1
   920  00E4  01A2               	clrf	pwm_duty_cycle@channel
   921  00E5  0AA2               	incf	pwm_duty_cycle@channel,f
   922  00E6  120A  118A  21C4  120A  118A  	fcall	_pwm_duty_cycle
   923  00EB                     l1312:
   924                           
   925                           ;main.c: 116:     PIR1bits.TMR2IF = 0;
   926  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   927  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   928  00ED  108C               	bcf	12,1	;volatile
   929  00EE                     l1314:
   930                           
   931                           ;main.c: 117:     T2CONbits.T2CKPS = 0b11;
   932  00EE  3003               	movlw	3
   933  00EF  0492               	iorwf	18,f	;volatile
   934  00F0                     l1316:
   935                           
   936                           ;main.c: 118:     T2CONbits.TMR2ON = 1;
   937  00F0  1512               	bsf	18,2	;volatile
   938  00F1                     l84:	
   939                           ;main.c: 119:     while(!PIR1bits.TMR2IF);
   940                           
   941  00F1  1C8C               	btfss	12,1	;volatile
   942  00F2  28F4               	goto	u161
   943  00F3  28F5               	goto	u160
   944  00F4                     u161:
   945  00F4  28F1               	goto	l84
   946  00F5                     u160:
   947  00F5                     l86:
   948                           
   949                           ;main.c: 120:     PIR1bits.TMR2IF = 0;
   950  00F5  108C               	bcf	12,1	;volatile
   951  00F6                     l1318:
   952                           
   953                           ;main.c: 121:     T2CONbits.TOUTPS = 0b0111;
   954  00F6  0812               	movf	18,w	;volatile
   955  00F7  3987               	andlw	-121
   956  00F8  3838               	iorlw	56
   957  00F9  0092               	movwf	18	;volatile
   958  00FA                     l1320:
   959                           
   960                           ;main.c: 122:     PIE1bits.TMR2IE = 1;
   961  00FA  1683               	bsf	3,5	;RP0=1, select bank1
   962  00FB  1303               	bcf	3,6	;RP1=0, select bank1
   963  00FC  148C               	bsf	12,1	;volatile
   964  00FD                     l1322:
   965                           
   966                           ;main.c: 124:     PIR1bits.ADIF = 0;
   967  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   968  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   969  00FF  130C               	bcf	12,6	;volatile
   970  0100                     l1324:
   971                           
   972                           ;main.c: 125:     PIE1bits.ADIE = 1;
   973  0100  1683               	bsf	3,5	;RP0=1, select bank1
   974  0101  1303               	bcf	3,6	;RP1=0, select bank1
   975  0102  170C               	bsf	12,6	;volatile
   976  0103                     l87:
   977  0103  0008               	return
   978  0104                     __end_of_setup:
   979                           
   980                           	psect	text2
   981  0326                     __ptext2:	
   982 ;; *************** function _tmr0_reload *****************
   983 ;; Defined at:
   984 ;;		line 40 in file "tmr0.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   998 ;;      Params:         0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0
  1001 ;;      Totals:         0       0       0       0       0
  1002 ;;Total ram usage:        0 bytes
  1003 ;; Hardware stack levels used: 1
  1004 ;; Hardware stack levels required when called: 2
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_setup
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012  0326                     _tmr0_reload:	
  1013                           ;psect for function _tmr0_reload
  1014                           
  1015  0326                     l1172:	
  1016                           ;incstack = 0
  1017                           ; Regs used in _tmr0_reload: [wreg]
  1018                           
  1019                           
  1020                           ;tmr0.c: 41:     TMR0 = 12;
  1021  0326  300C               	movlw	12
  1022  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0329  0081               	movwf	1	;volatile
  1025  032A                     l1174:
  1026                           
  1027                           ;tmr0.c: 42:     INTCONbits.T0IF = 0;
  1028  032A  110B               	bcf	11,2	;volatile
  1029  032B                     l141:
  1030  032B  0008               	return
  1031  032C                     __end_of_tmr0_reload:
  1032                           
  1033                           	psect	text3
  1034  0104                     __ptext3:	
  1035 ;; *************** function _tmr0_init *****************
  1036 ;; Defined at:
  1037 ;;		line 6 in file "tmr0.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  prescaler       2    0[BANK0 ] unsigned int 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       2       0       0       0
  1052 ;;      Locals:         0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0
  1054 ;;      Totals:         0       2       0       0       0
  1055 ;;Total ram usage:        2 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 2
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_setup
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065  0104                     _tmr0_init:	
  1066                           ;psect for function _tmr0_init
  1067                           
  1068  0104                     l1192:	
  1069                           ;incstack = 0
  1070                           ; Regs used in _tmr0_init: [wreg-fsr0h+status,2+status,0]
  1071                           
  1072                           
  1073                           ;tmr0.c: 7:     OPTION_REGbits.T0CS = 0;
  1074  0104  1683               	bsf	3,5	;RP0=1, select bank1
  1075  0105  1303               	bcf	3,6	;RP1=0, select bank1
  1076  0106  1281               	bcf	1,5	;volatile
  1077                           
  1078                           ;tmr0.c: 8:     OPTION_REGbits.PSA = 0;
  1079  0107  1181               	bcf	1,3	;volatile
  1080                           
  1081                           ;tmr0.c: 9:     switch(prescaler){
  1082  0108  293D               	goto	l1212
  1083  0109                     l1194:
  1084                           
  1085                           ;tmr0.c: 11:             OPTION_REGbits.PS = 0b000;
  1086  0109  30F8               	movlw	-8
  1087  010A  1683               	bsf	3,5	;RP0=1, select bank1
  1088  010B  1303               	bcf	3,6	;RP1=0, select bank1
  1089  010C  0581               	andwf	1,f	;volatile
  1090                           
  1091                           ;tmr0.c: 12:             break;
  1092  010D  2963               	goto	l1214
  1093  010E                     l1196:
  1094                           
  1095                           ;tmr0.c: 14:             OPTION_REGbits.PS = 0b001;
  1096  010E  1683               	bsf	3,5	;RP0=1, select bank1
  1097  010F  1303               	bcf	3,6	;RP1=0, select bank1
  1098  0110  0801               	movf	1,w	;volatile
  1099  0111  39F8               	andlw	-8
  1100  0112  3801               	iorlw	1
  1101  0113  0081               	movwf	1	;volatile
  1102                           
  1103                           ;tmr0.c: 15:             break;
  1104  0114  2963               	goto	l1214
  1105  0115                     l1198:
  1106                           
  1107                           ;tmr0.c: 17:             OPTION_REGbits.PS = 0b010;
  1108  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1109  0116  1303               	bcf	3,6	;RP1=0, select bank1
  1110  0117  0801               	movf	1,w	;volatile
  1111  0118  39F8               	andlw	-8
  1112  0119  3802               	iorlw	2
  1113  011A  0081               	movwf	1	;volatile
  1114                           
  1115                           ;tmr0.c: 18:             break;
  1116  011B  2963               	goto	l1214
  1117  011C                     l1200:
  1118                           
  1119                           ;tmr0.c: 20:             OPTION_REGbits.PS = 0b011;
  1120  011C  1683               	bsf	3,5	;RP0=1, select bank1
  1121  011D  1303               	bcf	3,6	;RP1=0, select bank1
  1122  011E  0801               	movf	1,w	;volatile
  1123  011F  39F8               	andlw	-8
  1124  0120  3803               	iorlw	3
  1125  0121  0081               	movwf	1	;volatile
  1126                           
  1127                           ;tmr0.c: 21:             break;
  1128  0122  2963               	goto	l1214
  1129  0123                     l1202:
  1130                           
  1131                           ;tmr0.c: 23:             OPTION_REGbits.PS = 0b100;
  1132  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1133  0124  1303               	bcf	3,6	;RP1=0, select bank1
  1134  0125  0801               	movf	1,w	;volatile
  1135  0126  39F8               	andlw	-8
  1136  0127  3804               	iorlw	4
  1137  0128  0081               	movwf	1	;volatile
  1138                           
  1139                           ;tmr0.c: 24:             break;
  1140  0129  2963               	goto	l1214
  1141  012A                     l1204:
  1142                           
  1143                           ;tmr0.c: 26:             OPTION_REGbits.PS = 0b101;
  1144  012A  1683               	bsf	3,5	;RP0=1, select bank1
  1145  012B  1303               	bcf	3,6	;RP1=0, select bank1
  1146  012C  0801               	movf	1,w	;volatile
  1147  012D  39F8               	andlw	-8
  1148  012E  3805               	iorlw	5
  1149  012F  0081               	movwf	1	;volatile
  1150                           
  1151                           ;tmr0.c: 27:             break;
  1152  0130  2963               	goto	l1214
  1153  0131                     l1206:
  1154                           
  1155                           ;tmr0.c: 29:             OPTION_REGbits.PS = 0b110;
  1156  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1157  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1158  0133  0801               	movf	1,w	;volatile
  1159  0134  39F8               	andlw	-8
  1160  0135  3806               	iorlw	6
  1161  0136  0081               	movwf	1	;volatile
  1162                           
  1163                           ;tmr0.c: 30:             break;
  1164  0137  2963               	goto	l1214
  1165  0138                     l1208:
  1166                           
  1167                           ;tmr0.c: 32:             OPTION_REGbits.PS = 0b111;
  1168  0138  3007               	movlw	7
  1169  0139  1683               	bsf	3,5	;RP0=1, select bank1
  1170  013A  1303               	bcf	3,6	;RP1=0, select bank1
  1171  013B  0481               	iorwf	1,f	;volatile
  1172                           
  1173                           ;tmr0.c: 33:             break;
  1174  013C  2963               	goto	l1214
  1175  013D                     l1212:
  1176                           
  1177                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1178                           ; Switch size 1, requested type "simple"
  1179                           ; Number of cases is 2, Range of values is 0 to 1
  1180                           ; switch strategies available:
  1181                           ; Name         Instructions Cycles
  1182                           ; simple_byte            7     4 (average)
  1183                           ; direct_byte           14     8 (fixed)
  1184                           ; jumptable            260     6 (fixed)
  1185                           ;	Chosen strategy is simple_byte
  1186  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1187  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1188  013F  0821               	movf	tmr0_init@prescaler+1,w
  1189  0140  3A00               	xorlw	0	; case 0
  1190  0141  1903               	skipnz
  1191  0142  2947               	goto	l1544
  1192  0143  3A01               	xorlw	1	; case 1
  1193  0144  1903               	skipnz
  1194  0145  295E               	goto	l1546
  1195  0146  2963               	goto	l1214
  1196  0147                     l1544:
  1197                           
  1198                           ; Switch size 1, requested type "simple"
  1199                           ; Number of cases is 7, Range of values is 2 to 128
  1200                           ; switch strategies available:
  1201                           ; Name         Instructions Cycles
  1202                           ; simple_byte           22    12 (average)
  1203                           ; jumptable            263     9 (fixed)
  1204                           ;	Chosen strategy is simple_byte
  1205  0147  0820               	movf	tmr0_init@prescaler,w
  1206  0148  3A02               	xorlw	2	; case 2
  1207  0149  1903               	skipnz
  1208  014A  2909               	goto	l1194
  1209  014B  3A06               	xorlw	6	; case 4
  1210  014C  1903               	skipnz
  1211  014D  290E               	goto	l1196
  1212  014E  3A0C               	xorlw	12	; case 8
  1213  014F  1903               	skipnz
  1214  0150  2915               	goto	l1198
  1215  0151  3A18               	xorlw	24	; case 16
  1216  0152  1903               	skipnz
  1217  0153  291C               	goto	l1200
  1218  0154  3A30               	xorlw	48	; case 32
  1219  0155  1903               	skipnz
  1220  0156  2923               	goto	l1202
  1221  0157  3A60               	xorlw	96	; case 64
  1222  0158  1903               	skipnz
  1223  0159  292A               	goto	l1204
  1224  015A  3AC0               	xorlw	192	; case 128
  1225  015B  1903               	skipnz
  1226  015C  2931               	goto	l1206
  1227  015D  2963               	goto	l1214
  1228  015E                     l1546:
  1229                           
  1230                           ; Switch size 1, requested type "simple"
  1231                           ; Number of cases is 1, Range of values is 0 to 0
  1232                           ; switch strategies available:
  1233                           ; Name         Instructions Cycles
  1234                           ; simple_byte            4     3 (average)
  1235                           ; direct_byte           11     8 (fixed)
  1236                           ; jumptable            260     6 (fixed)
  1237                           ;	Chosen strategy is simple_byte
  1238  015E  0820               	movf	tmr0_init@prescaler,w
  1239  015F  3A00               	xorlw	0	; case 0
  1240  0160  1903               	skipnz
  1241  0161  2938               	goto	l1208
  1242  0162  2963               	goto	l1214
  1243  0163                     l1214:
  1244                           
  1245                           ;tmr0.c: 37:     TMR0 = 12;
  1246  0163  300C               	movlw	12
  1247  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0165  0081               	movwf	1	;volatile
  1249  0166                     l1216:
  1250                           
  1251                           ;tmr0.c: 38:     INTCONbits.T0IF = 0;
  1252  0166  110B               	bcf	11,2	;volatile
  1253  0167                     l138:
  1254  0167  0008               	return
  1255  0168                     __end_of_tmr0_init:
  1256                           
  1257                           	psect	text4
  1258  02B5                     __ptext4:	
  1259 ;; *************** function _pwm_init *****************
  1260 ;; Defined at:
  1261 ;;		line 5 in file "pwm.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  channel         1    wreg     unsigned char 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  channel         1    2[BANK0 ] unsigned char 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1275 ;;      Params:         0       0       0       0       0
  1276 ;;      Locals:         0       1       0       0       0
  1277 ;;      Temps:          0       2       0       0       0
  1278 ;;      Totals:         0       3       0       0       0
  1279 ;;Total ram usage:        3 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; Hardware stack levels required when called: 2
  1282 ;; This function calls:
  1283 ;;		Nothing
  1284 ;; This function is called by:
  1285 ;;		_setup
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289  02B5                     _pwm_init:	
  1290                           ;psect for function _pwm_init
  1291                           
  1292                           
  1293                           ;incstack = 0
  1294                           ; Regs used in _pwm_init: [wreg-fsr0h+status,2+status,0]
  1295                           ;pwm_init@channel stored from wreg
  1296  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1297  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1298  02B7  00A2               	movwf	pwm_init@channel
  1299  02B8                     l1226:
  1300                           
  1301                           ;pwm.c: 6:     TRISCbits.TRISC2 = 1;
  1302  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  1303  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  1304  02BA  1507               	bsf	7,2	;volatile
  1305                           
  1306                           ;pwm.c: 7:     TRISCbits.TRISC1 = 1;
  1307  02BB  1487               	bsf	7,1	;volatile
  1308  02BC                     l1228:
  1309                           
  1310                           ;pwm.c: 8:     PR2 = 15;
  1311  02BC  300F               	movlw	15
  1312  02BD  0092               	movwf	18	;volatile
  1313  02BE                     l1230:
  1314                           
  1315                           ;pwm.c: 9:     T2CONbits.T2CKPS = 0b11;
  1316  02BE  3003               	movlw	3
  1317  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  1318  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  1319  02C1  0492               	iorwf	18,f	;volatile
  1320                           
  1321                           ;pwm.c: 10:     switch(channel){
  1322  02C2  2AD7               	goto	l1248
  1323  02C3                     l1232:
  1324                           
  1325                           ;pwm.c: 12:             CCP1CON = 0;
  1326  02C3  0197               	clrf	23	;volatile
  1327  02C4                     l1234:
  1328                           
  1329                           ;pwm.c: 13:             CCP1CONbits.P1M = 0;
  1330  02C4  303F               	movlw	-193
  1331  02C5  0597               	andwf	23,f	;volatile
  1332  02C6                     l1236:
  1333                           
  1334                           ;pwm.c: 14:             CCP1CONbits.CCP1M = 0b1100;
  1335  02C6  0817               	movf	23,w	;volatile
  1336  02C7  39F0               	andlw	-16
  1337  02C8  380C               	iorlw	12
  1338  02C9  0097               	movwf	23	;volatile
  1339  02CA                     l1238:
  1340                           
  1341                           ;pwm.c: 15:             TRISCbits.TRISC2 = 0;
  1342  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1343  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1344  02CC  1107               	bcf	7,2	;volatile
  1345                           
  1346                           ;pwm.c: 16:             break;
  1347  02CD  2AE7               	goto	l167
  1348  02CE                     l1240:
  1349                           
  1350                           ;pwm.c: 18:             CCP2CON = 0;
  1351  02CE  019D               	clrf	29	;volatile
  1352  02CF                     l1242:
  1353                           
  1354                           ;pwm.c: 19:             CCP2CONbits.CCP2M = 0b1100;
  1355  02CF  081D               	movf	29,w	;volatile
  1356  02D0  39F0               	andlw	-16
  1357  02D1  380C               	iorlw	12
  1358  02D2  009D               	movwf	29	;volatile
  1359  02D3                     l1244:
  1360                           
  1361                           ;pwm.c: 20:             TRISCbits.TRISC1 = 0;
  1362  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  1363  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  1364  02D5  1087               	bcf	7,1	;volatile
  1365                           
  1366                           ;pwm.c: 21:             break;
  1367  02D6  2AE7               	goto	l167
  1368  02D7                     l1248:
  1369  02D7  0822               	movf	pwm_init@channel,w
  1370  02D8  00A0               	movwf	??_pwm_init
  1371  02D9  01A1               	clrf	??_pwm_init+1
  1372                           
  1373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1374                           ; Switch size 1, requested type "simple"
  1375                           ; Number of cases is 1, Range of values is 0 to 0
  1376                           ; switch strategies available:
  1377                           ; Name         Instructions Cycles
  1378                           ; simple_byte            4     3 (average)
  1379                           ; direct_byte           11     8 (fixed)
  1380                           ; jumptable            260     6 (fixed)
  1381                           ;	Chosen strategy is simple_byte
  1382  02DA  0821               	movf	??_pwm_init+1,w
  1383  02DB  3A00               	xorlw	0	; case 0
  1384  02DC  1903               	skipnz
  1385  02DD  2ADF               	goto	l1548
  1386  02DE  2AE7               	goto	l167
  1387  02DF                     l1548:
  1388                           
  1389                           ; Switch size 1, requested type "simple"
  1390                           ; Number of cases is 2, Range of values is 1 to 2
  1391                           ; switch strategies available:
  1392                           ; Name         Instructions Cycles
  1393                           ; simple_byte            7     4 (average)
  1394                           ; direct_byte           17    11 (fixed)
  1395                           ; jumptable            263     9 (fixed)
  1396                           ;	Chosen strategy is simple_byte
  1397  02DF  0820               	movf	??_pwm_init,w
  1398  02E0  3A01               	xorlw	1	; case 1
  1399  02E1  1903               	skipnz
  1400  02E2  2AC3               	goto	l1232
  1401  02E3  3A03               	xorlw	3	; case 2
  1402  02E4  1903               	skipnz
  1403  02E5  2ACE               	goto	l1240
  1404  02E6  2AE7               	goto	l167
  1405  02E7                     l167:
  1406  02E7  0008               	return
  1407  02E8                     __end_of_pwm_init:
  1408                           
  1409                           	psect	text5
  1410  01C4                     __ptext5:	
  1411 ;; *************** function _pwm_duty_cycle *****************
  1412 ;; Defined at:
  1413 ;;		line 29 in file "pwm.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  duty_cycle      2    0[BANK0 ] unsigned int 
  1416 ;;  channel         1    2[BANK0 ] unsigned char 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1428 ;;      Params:         0       3       0       0       0
  1429 ;;      Locals:         0       0       0       0       0
  1430 ;;      Temps:          0       3       0       0       0
  1431 ;;      Totals:         0       6       0       0       0
  1432 ;;Total ram usage:        6 bytes
  1433 ;; Hardware stack levels used: 1
  1434 ;; Hardware stack levels required when called: 2
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_setup
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442  01C4                     _pwm_duty_cycle:	
  1443                           ;psect for function _pwm_duty_cycle
  1444                           
  1445  01C4                     l1176:	
  1446                           ;incstack = 0
  1447                           ; Regs used in _pwm_duty_cycle: [wreg-fsr0h+status,2+status,0]
  1448                           
  1449                           
  1450                           ;pwm.c: 30:     if (duty_cycle < 1024){
  1451  01C4  3004               	movlw	4
  1452  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1453  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1454  01C7  0221               	subwf	pwm_duty_cycle@duty_cycle+1,w
  1455  01C8  3000               	movlw	0
  1456  01C9  1903               	skipnz
  1457  01CA  0220               	subwf	pwm_duty_cycle@duty_cycle,w
  1458  01CB  1803               	skipnc
  1459  01CC  29CE               	goto	u151
  1460  01CD  29CF               	goto	u150
  1461  01CE                     u151:
  1462  01CE  2A1D               	goto	l176
  1463  01CF                     u150:
  1464  01CF  2A0D               	goto	l1186
  1465  01D0                     l1180:
  1466                           
  1467                           ;pwm.c: 33:                 CCPR1L = duty_cycle>>2;
  1468  01D0  0821               	movf	pwm_duty_cycle@duty_cycle+1,w
  1469  01D1  00A4               	movwf	??_pwm_duty_cycle+1
  1470  01D2  0820               	movf	pwm_duty_cycle@duty_cycle,w
  1471  01D3  00A3               	movwf	??_pwm_duty_cycle
  1472  01D4  1003               	clrc
  1473  01D5  0CA4               	rrf	??_pwm_duty_cycle+1,f
  1474  01D6  0CA3               	rrf	??_pwm_duty_cycle,f
  1475  01D7  1003               	clrc
  1476  01D8  0CA4               	rrf	??_pwm_duty_cycle+1,f
  1477  01D9  0CA3               	rrf	??_pwm_duty_cycle,f
  1478  01DA  0823               	movf	??_pwm_duty_cycle,w
  1479  01DB  0095               	movwf	21	;volatile
  1480                           
  1481                           ;pwm.c: 34:                 CCP1CONbits.DC1B = duty_cycle & 0b11;
  1482  01DC  0820               	movf	pwm_duty_cycle@duty_cycle,w
  1483  01DD  3903               	andlw	3
  1484  01DE  00A3               	movwf	??_pwm_duty_cycle
  1485  01DF  0EA3               	swapf	??_pwm_duty_cycle,f
  1486  01E0  0817               	movf	23,w	;volatile
  1487  01E1  0623               	xorwf	??_pwm_duty_cycle,w
  1488  01E2  39CF               	andlw	-49
  1489  01E3  0623               	xorwf	??_pwm_duty_cycle,w
  1490  01E4  0097               	movwf	23	;volatile
  1491                           
  1492                           ;pwm.c: 35:                 break;
  1493  01E5  2A1D               	goto	l176
  1494  01E6                     l1182:
  1495                           
  1496                           ;pwm.c: 37:                 CCPR2L = duty_cycle>>2;
  1497  01E6  0821               	movf	pwm_duty_cycle@duty_cycle+1,w
  1498  01E7  00A4               	movwf	??_pwm_duty_cycle+1
  1499  01E8  0820               	movf	pwm_duty_cycle@duty_cycle,w
  1500  01E9  00A3               	movwf	??_pwm_duty_cycle
  1501  01EA  1003               	clrc
  1502  01EB  0CA4               	rrf	??_pwm_duty_cycle+1,f
  1503  01EC  0CA3               	rrf	??_pwm_duty_cycle,f
  1504  01ED  1003               	clrc
  1505  01EE  0CA4               	rrf	??_pwm_duty_cycle+1,f
  1506  01EF  0CA3               	rrf	??_pwm_duty_cycle,f
  1507  01F0  0823               	movf	??_pwm_duty_cycle,w
  1508  01F1  009B               	movwf	27	;volatile
  1509                           
  1510                           ;pwm.c: 38:                 CCP2CONbits.DC2B0 = duty_cycle & 0b1;
  1511  01F2  0820               	movf	pwm_duty_cycle@duty_cycle,w
  1512  01F3  3901               	andlw	1
  1513  01F4  00A3               	movwf	??_pwm_duty_cycle
  1514  01F5  0EA3               	swapf	??_pwm_duty_cycle,f
  1515  01F6  081D               	movf	29,w	;volatile
  1516  01F7  0623               	xorwf	??_pwm_duty_cycle,w
  1517  01F8  39EF               	andlw	-17
  1518  01F9  0623               	xorwf	??_pwm_duty_cycle,w
  1519  01FA  009D               	movwf	29	;volatile
  1520                           
  1521                           ;pwm.c: 39:                 CCP2CONbits.DC2B1 = duty_cycle>>1 & 0b1;
  1522  01FB  0821               	movf	pwm_duty_cycle@duty_cycle+1,w
  1523  01FC  00A4               	movwf	??_pwm_duty_cycle+1
  1524  01FD  0820               	movf	pwm_duty_cycle@duty_cycle,w
  1525  01FE  00A3               	movwf	??_pwm_duty_cycle
  1526  01FF  1003               	clrc
  1527  0200  0CA4               	rrf	??_pwm_duty_cycle+1,f
  1528  0201  0CA3               	rrf	??_pwm_duty_cycle,f
  1529  0202  0823               	movf	??_pwm_duty_cycle,w
  1530  0203  3901               	andlw	1
  1531  0204  00A5               	movwf	??_pwm_duty_cycle+2
  1532  0205  0EA5               	swapf	??_pwm_duty_cycle+2,f
  1533  0206  0DA5               	rlf	??_pwm_duty_cycle+2,f
  1534  0207  081D               	movf	29,w	;volatile
  1535  0208  0625               	xorwf	??_pwm_duty_cycle+2,w
  1536  0209  39DF               	andlw	-33
  1537  020A  0625               	xorwf	??_pwm_duty_cycle+2,w
  1538  020B  009D               	movwf	29	;volatile
  1539                           
  1540                           ;pwm.c: 40:                 break;
  1541  020C  2A1D               	goto	l176
  1542  020D                     l1186:
  1543  020D  0822               	movf	pwm_duty_cycle@channel,w
  1544  020E  00A3               	movwf	??_pwm_duty_cycle
  1545  020F  01A4               	clrf	??_pwm_duty_cycle+1
  1546                           
  1547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1548                           ; Switch size 1, requested type "simple"
  1549                           ; Number of cases is 1, Range of values is 0 to 0
  1550                           ; switch strategies available:
  1551                           ; Name         Instructions Cycles
  1552                           ; simple_byte            4     3 (average)
  1553                           ; direct_byte           11     8 (fixed)
  1554                           ; jumptable            260     6 (fixed)
  1555                           ;	Chosen strategy is simple_byte
  1556  0210  0824               	movf	??_pwm_duty_cycle+1,w
  1557  0211  3A00               	xorlw	0	; case 0
  1558  0212  1903               	skipnz
  1559  0213  2A15               	goto	l1550
  1560  0214  2A1D               	goto	l176
  1561  0215                     l1550:
  1562                           
  1563                           ; Switch size 1, requested type "simple"
  1564                           ; Number of cases is 2, Range of values is 1 to 2
  1565                           ; switch strategies available:
  1566                           ; Name         Instructions Cycles
  1567                           ; simple_byte            7     4 (average)
  1568                           ; direct_byte           17    11 (fixed)
  1569                           ; jumptable            263     9 (fixed)
  1570                           ;	Chosen strategy is simple_byte
  1571  0215  0823               	movf	??_pwm_duty_cycle,w
  1572  0216  3A01               	xorlw	1	; case 1
  1573  0217  1903               	skipnz
  1574  0218  29D0               	goto	l1180
  1575  0219  3A03               	xorlw	3	; case 2
  1576  021A  1903               	skipnz
  1577  021B  29E6               	goto	l1182
  1578  021C  2A1D               	goto	l176
  1579  021D                     l176:
  1580  021D  0008               	return
  1581  021E                     __end_of_pwm_duty_cycle:
  1582                           
  1583                           	psect	text6
  1584  026A                     __ptext6:	
  1585 ;; *************** function _init_osc_MHz *****************
  1586 ;; Defined at:
  1587 ;;		line 5 in file "oscilador.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  freq            1    wreg     unsigned char 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  freq            1    2[BANK0 ] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         0       0       0       0       0
  1602 ;;      Locals:         0       1       0       0       0
  1603 ;;      Temps:          0       2       0       0       0
  1604 ;;      Totals:         0       3       0       0       0
  1605 ;;Total ram usage:        3 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 2
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_setup
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615  026A                     _init_osc_MHz:	
  1616                           ;psect for function _init_osc_MHz
  1617                           
  1618                           
  1619                           ;incstack = 0
  1620                           ; Regs used in _init_osc_MHz: [wreg-fsr0h+status,2+status,0]
  1621                           ;init_osc_MHz@freq stored from wreg
  1622  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1623  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1624  026C  00A2               	movwf	init_osc_MHz@freq
  1625  026D                     l1150:
  1626                           
  1627                           ;oscilador.c: 6:     OSCCONbits.SCS = 1;
  1628  026D  1683               	bsf	3,5	;RP0=1, select bank1
  1629  026E  1303               	bcf	3,6	;RP1=0, select bank1
  1630  026F  140F               	bsf	15,0	;volatile
  1631                           
  1632                           ;oscilador.c: 7:     switch(freq){
  1633  0270  2A99               	goto	l1166
  1634  0271                     l1152:
  1635                           
  1636                           ;oscilador.c: 9:             OSCCONbits.IRCF = 0b100;
  1637  0271  1683               	bsf	3,5	;RP0=1, select bank1
  1638  0272  1303               	bcf	3,6	;RP1=0, select bank1
  1639  0273  080F               	movf	15,w	;volatile
  1640  0274  398F               	andlw	-113
  1641  0275  3840               	iorlw	64
  1642  0276  008F               	movwf	15	;volatile
  1643                           
  1644                           ;oscilador.c: 10:             break;
  1645  0277  2AB4               	goto	l13
  1646  0278                     l1154:
  1647                           
  1648                           ;oscilador.c: 12:             OSCCONbits.IRCF = 0b101;
  1649  0278  1683               	bsf	3,5	;RP0=1, select bank1
  1650  0279  1303               	bcf	3,6	;RP1=0, select bank1
  1651  027A  080F               	movf	15,w	;volatile
  1652  027B  398F               	andlw	-113
  1653  027C  3850               	iorlw	80
  1654  027D  008F               	movwf	15	;volatile
  1655                           
  1656                           ;oscilador.c: 13:             break;
  1657  027E  2AB4               	goto	l13
  1658  027F                     l1156:
  1659                           
  1660                           ;oscilador.c: 15:             OSCCONbits.IRCF = 0b110;
  1661  027F  1683               	bsf	3,5	;RP0=1, select bank1
  1662  0280  1303               	bcf	3,6	;RP1=0, select bank1
  1663  0281  080F               	movf	15,w	;volatile
  1664  0282  398F               	andlw	-113
  1665  0283  3860               	iorlw	96
  1666  0284  008F               	movwf	15	;volatile
  1667                           
  1668                           ;oscilador.c: 16:             break;
  1669  0285  2AB4               	goto	l13
  1670  0286                     l1158:
  1671                           
  1672                           ;oscilador.c: 18:             OSCCONbits.IRCF = 0b111;
  1673  0286  3070               	movlw	112
  1674  0287  1683               	bsf	3,5	;RP0=1, select bank1
  1675  0288  1303               	bcf	3,6	;RP1=0, select bank1
  1676  0289  048F               	iorwf	15,f	;volatile
  1677                           
  1678                           ;oscilador.c: 19:             break;
  1679  028A  2AB4               	goto	l13
  1680  028B                     l1160:
  1681                           
  1682                           ;oscilador.c: 21:             OSCCONbits.IRCF = 0b011;
  1683  028B  1683               	bsf	3,5	;RP0=1, select bank1
  1684  028C  1303               	bcf	3,6	;RP1=0, select bank1
  1685  028D  080F               	movf	15,w	;volatile
  1686  028E  398F               	andlw	-113
  1687  028F  3830               	iorlw	48
  1688  0290  008F               	movwf	15	;volatile
  1689                           
  1690                           ;oscilador.c: 22:             break;
  1691  0291  2AB4               	goto	l13
  1692  0292                     l1162:
  1693                           
  1694                           ;oscilador.c: 24:             OSCCONbits.IRCF = 0b110;
  1695  0292  1683               	bsf	3,5	;RP0=1, select bank1
  1696  0293  1303               	bcf	3,6	;RP1=0, select bank1
  1697  0294  080F               	movf	15,w	;volatile
  1698  0295  398F               	andlw	-113
  1699  0296  3860               	iorlw	96
  1700  0297  008F               	movwf	15	;volatile
  1701                           
  1702                           ;oscilador.c: 25:             break;
  1703  0298  2AB4               	goto	l13
  1704  0299                     l1166:
  1705  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1706  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1707  029B  0822               	movf	init_osc_MHz@freq,w
  1708  029C  00A0               	movwf	??_init_osc_MHz
  1709  029D  01A1               	clrf	??_init_osc_MHz+1
  1710                           
  1711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1712                           ; Switch size 1, requested type "simple"
  1713                           ; Number of cases is 1, Range of values is 0 to 0
  1714                           ; switch strategies available:
  1715                           ; Name         Instructions Cycles
  1716                           ; simple_byte            4     3 (average)
  1717                           ; direct_byte           11     8 (fixed)
  1718                           ; jumptable            260     6 (fixed)
  1719                           ;	Chosen strategy is simple_byte
  1720  029E  0821               	movf	??_init_osc_MHz+1,w
  1721  029F  3A00               	xorlw	0	; case 0
  1722  02A0  1903               	skipnz
  1723  02A1  2AA3               	goto	l1552
  1724  02A2  2A92               	goto	l1162
  1725  02A3                     l1552:
  1726                           
  1727                           ; Switch size 1, requested type "simple"
  1728                           ; Number of cases is 5, Range of values is 0 to 4
  1729                           ; switch strategies available:
  1730                           ; Name         Instructions Cycles
  1731                           ; simple_byte           16     9 (average)
  1732                           ; direct_byte           23     8 (fixed)
  1733                           ; jumptable            260     6 (fixed)
  1734                           ;	Chosen strategy is simple_byte
  1735  02A3  0820               	movf	??_init_osc_MHz,w
  1736  02A4  3A00               	xorlw	0	; case 0
  1737  02A5  1903               	skipnz
  1738  02A6  2A71               	goto	l1152
  1739  02A7  3A01               	xorlw	1	; case 1
  1740  02A8  1903               	skipnz
  1741  02A9  2A78               	goto	l1154
  1742  02AA  3A03               	xorlw	3	; case 2
  1743  02AB  1903               	skipnz
  1744  02AC  2A7F               	goto	l1156
  1745  02AD  3A01               	xorlw	1	; case 3
  1746  02AE  1903               	skipnz
  1747  02AF  2A86               	goto	l1158
  1748  02B0  3A07               	xorlw	7	; case 4
  1749  02B1  1903               	skipnz
  1750  02B2  2A8B               	goto	l1160
  1751  02B3  2A92               	goto	l1162
  1752  02B4                     l13:
  1753  02B4  0008               	return
  1754  02B5                     __end_of_init_osc_MHz:
  1755                           
  1756                           	psect	text7
  1757  021E                     __ptext7:	
  1758 ;; *************** function _adc_init *****************
  1759 ;; Defined at:
  1760 ;;		line 9 in file "adc.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  adc_cs          1    wreg     unsigned char 
  1763 ;;  vref_plus       1    0[BANK0 ] unsigned char 
  1764 ;;  vref_minus      1    1[BANK0 ] unsigned char 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  adc_cs          1    4[BANK0 ] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1776 ;;      Params:         0       2       0       0       0
  1777 ;;      Locals:         0       1       0       0       0
  1778 ;;      Temps:          0       2       0       0       0
  1779 ;;      Totals:         0       5       0       0       0
  1780 ;;Total ram usage:        5 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; Hardware stack levels required when called: 2
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_setup
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790  021E                     _adc_init:	
  1791                           ;psect for function _adc_init
  1792                           
  1793                           
  1794                           ;incstack = 0
  1795                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
  1796                           ;adc_init@adc_cs stored from wreg
  1797  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1798  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1799  0220  00A4               	movwf	adc_init@adc_cs
  1800  0221                     l1254:
  1801                           
  1802                           ;adc.c: 11:     switch(adc_cs){
  1803  0221  2A32               	goto	l1266
  1804  0222                     l1256:
  1805                           
  1806                           ;adc.c: 13:             ADCON0bits.ADCS = 0b00;
  1807  0222  303F               	movlw	-193
  1808  0223  059F               	andwf	31,f	;volatile
  1809                           
  1810                           ;adc.c: 14:             break;
  1811  0224  2A48               	goto	l1268
  1812  0225                     l1258:
  1813                           
  1814                           ;adc.c: 16:             ADCON0bits.ADCS = 0b01;
  1815  0225  081F               	movf	31,w	;volatile
  1816  0226  393F               	andlw	-193
  1817  0227  3840               	iorlw	64
  1818  0228  009F               	movwf	31	;volatile
  1819                           
  1820                           ;adc.c: 17:             break;
  1821  0229  2A48               	goto	l1268
  1822  022A                     l1260:
  1823                           
  1824                           ;adc.c: 19:             ADCON0bits.ADCS = 0b10;
  1825  022A  081F               	movf	31,w	;volatile
  1826  022B  393F               	andlw	-193
  1827  022C  3880               	iorlw	128
  1828  022D  009F               	movwf	31	;volatile
  1829                           
  1830                           ;adc.c: 20:             break;
  1831  022E  2A48               	goto	l1268
  1832  022F                     l1262:
  1833                           
  1834                           ;adc.c: 22:             ADCON0bits.ADCS = 0b11;
  1835  022F  30C0               	movlw	192
  1836  0230  049F               	iorwf	31,f	;volatile
  1837                           
  1838                           ;adc.c: 23:             break;
  1839  0231  2A48               	goto	l1268
  1840  0232                     l1266:
  1841  0232  0824               	movf	adc_init@adc_cs,w
  1842  0233  00A2               	movwf	??_adc_init
  1843  0234  01A3               	clrf	??_adc_init+1
  1844                           
  1845                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1846                           ; Switch size 1, requested type "simple"
  1847                           ; Number of cases is 1, Range of values is 0 to 0
  1848                           ; switch strategies available:
  1849                           ; Name         Instructions Cycles
  1850                           ; simple_byte            4     3 (average)
  1851                           ; direct_byte           11     8 (fixed)
  1852                           ; jumptable            260     6 (fixed)
  1853                           ;	Chosen strategy is simple_byte
  1854  0235  0823               	movf	??_adc_init+1,w
  1855  0236  3A00               	xorlw	0	; case 0
  1856  0237  1903               	skipnz
  1857  0238  2A3A               	goto	l1554
  1858  0239  2A48               	goto	l1268
  1859  023A                     l1554:
  1860                           
  1861                           ; Switch size 1, requested type "simple"
  1862                           ; Number of cases is 4, Range of values is 0 to 3
  1863                           ; switch strategies available:
  1864                           ; Name         Instructions Cycles
  1865                           ; simple_byte           13     7 (average)
  1866                           ; direct_byte           20     8 (fixed)
  1867                           ; jumptable            260     6 (fixed)
  1868                           ;	Chosen strategy is simple_byte
  1869  023A  0822               	movf	??_adc_init,w
  1870  023B  3A00               	xorlw	0	; case 0
  1871  023C  1903               	skipnz
  1872  023D  2A22               	goto	l1256
  1873  023E  3A01               	xorlw	1	; case 1
  1874  023F  1903               	skipnz
  1875  0240  2A25               	goto	l1258
  1876  0241  3A03               	xorlw	3	; case 2
  1877  0242  1903               	skipnz
  1878  0243  2A2A               	goto	l1260
  1879  0244  3A01               	xorlw	1	; case 3
  1880  0245  1903               	skipnz
  1881  0246  2A2F               	goto	l1262
  1882  0247  2A48               	goto	l1268
  1883  0248                     l1268:
  1884                           
  1885                           ;adc.c: 27:     ADCON1bits.VCFG0 = vref_plus;
  1886  0248  0C20               	rrf	adc_init@vref_plus,w
  1887  0249  1683               	bsf	3,5	;RP0=1, select bank1
  1888  024A  1303               	bcf	3,6	;RP1=0, select bank1
  1889  024B  1C03               	skipc
  1890  024C  121F               	bcf	31,4	;volatile
  1891  024D  1803               	skipnc
  1892  024E  161F               	bsf	31,4	;volatile
  1893                           
  1894                           ;adc.c: 28:     ADCON1bits.VCFG1 = vref_minus;
  1895  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1896  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1897  0251  0C21               	rrf	adc_init@vref_minus,w
  1898  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1899  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1900  0254  1C03               	skipc
  1901  0255  129F               	bcf	31,5	;volatile
  1902  0256  1803               	skipnc
  1903  0257  169F               	bsf	31,5	;volatile
  1904  0258                     l1270:
  1905                           
  1906                           ;adc.c: 29:     ADCON0bits.CHS = 0b0000;
  1907  0258  30C3               	movlw	-61
  1908  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1909  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1910  025B  059F               	andwf	31,f	;volatile
  1911  025C                     l1272:
  1912                           
  1913                           ;adc.c: 30:     ADCON1bits.ADFM = 0;
  1914  025C  1683               	bsf	3,5	;RP0=1, select bank1
  1915  025D  1303               	bcf	3,6	;RP1=0, select bank1
  1916  025E  139F               	bcf	31,7	;volatile
  1917  025F                     l1274:
  1918                           
  1919                           ;adc.c: 31:     ADCON0bits.ADON = 1;
  1920  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1921  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1922  0261  141F               	bsf	31,0	;volatile
  1923  0262                     l1276:
  1924                           
  1925                           ;adc.c: 32:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1926  0262  300C               	movlw	12
  1927  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1928  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1929  0265  00A2               	movwf	??_adc_init
  1930  0266                     u297:
  1931  0266  0BA2               	decfsz	??_adc_init,f
  1932  0267  2A66               	goto	u297
  1933  0268  0000               	nop
  1934  0269                     l107:
  1935  0269  0008               	return
  1936  026A                     __end_of_adc_init:
  1937                           
  1938                           	psect	text8
  1939  02E8                     __ptext8:	
  1940 ;; *************** function _adc_start *****************
  1941 ;; Defined at:
  1942 ;;		line 35 in file "adc.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  channel         1    wreg     unsigned char 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  channel         1    1[BANK0 ] unsigned char 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1956 ;;      Params:         0       0       0       0       0
  1957 ;;      Locals:         0       1       0       0       0
  1958 ;;      Temps:          0       1       0       0       0
  1959 ;;      Totals:         0       2       0       0       0
  1960 ;;Total ram usage:        2 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 2
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_main
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970  02E8                     _adc_start:	
  1971                           ;psect for function _adc_start
  1972                           
  1973                           
  1974                           ;incstack = 0
  1975                           ; Regs used in _adc_start: [wreg+status,2+status,0]
  1976                           ;adc_start@channel stored from wreg
  1977  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1978  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1979  02EA  00A1               	movwf	adc_start@channel
  1980  02EB                     l1326:
  1981                           
  1982                           ;adc.c: 37:     if(channel < 14){
  1983  02EB  300E               	movlw	14
  1984  02EC  0221               	subwf	adc_start@channel,w
  1985  02ED  1803               	skipnc
  1986  02EE  2AF0               	goto	u171
  1987  02EF  2AF1               	goto	u170
  1988  02F0                     u171:
  1989  02F0  2AFB               	goto	l1330
  1990  02F1                     u170:
  1991  02F1                     l1328:
  1992                           
  1993                           ;adc.c: 38:         ADCON0bits.CHS = channel;
  1994  02F1  0821               	movf	adc_start@channel,w
  1995  02F2  00A0               	movwf	??_adc_start
  1996  02F3  0DA0               	rlf	??_adc_start,f
  1997  02F4  0DA0               	rlf	??_adc_start,f
  1998  02F5  081F               	movf	31,w	;volatile
  1999  02F6  0620               	xorwf	??_adc_start,w
  2000  02F7  39C3               	andlw	-61
  2001  02F8  0620               	xorwf	??_adc_start,w
  2002  02F9  009F               	movwf	31	;volatile
  2003                           
  2004                           ;adc.c: 39:     }
  2005  02FA  2AFD               	goto	l1332
  2006  02FB                     l1330:
  2007                           
  2008                           ;adc.c: 41:         ADCON0bits.CHS = 0;
  2009  02FB  30C3               	movlw	-61
  2010  02FC  059F               	andwf	31,f	;volatile
  2011  02FD                     l1332:
  2012                           
  2013                           ;adc.c: 43:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2014  02FD  300C               	movlw	12
  2015  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2016  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  2017  0300  00A0               	movwf	??_adc_start
  2018  0301                     u307:
  2019  0301  0BA0               	decfsz	??_adc_start,f
  2020  0302  2B01               	goto	u307
  2021  0303  0000               	nop
  2022  0304                     l1334:
  2023                           
  2024                           ;adc.c: 44:     ADCON0bits.GO_nDONE = 1;
  2025  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2026  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0306  149F               	bsf	31,1	;volatile
  2028  0307                     l112:	
  2029                           ;adc.c: 45:     while (ADCON0bits.GO){}
  2030                           
  2031  0307  189F               	btfsc	31,1	;volatile
  2032  0308  2B0A               	goto	u181
  2033  0309  2B0B               	goto	u180
  2034  030A                     u181:
  2035  030A  2B07               	goto	l112
  2036  030B                     u180:
  2037  030B                     l115:
  2038  030B  0008               	return
  2039  030C                     __end_of_adc_start:
  2040                           
  2041                           	psect	text9
  2042  001F                     __ptext9:	
  2043 ;; *************** function _isr *****************
  2044 ;; Defined at:
  2045 ;;		line 51 in file "main.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2059 ;;      Params:         0       0       0       0       0
  2060 ;;      Locals:         0       0       0       0       0
  2061 ;;      Temps:          6       0       0       0       0
  2062 ;;      Totals:         6       0       0       0       0
  2063 ;;Total ram usage:        6 bytes
  2064 ;; Hardware stack levels used: 1
  2065 ;; Hardware stack levels required when called: 1
  2066 ;; This function calls:
  2067 ;;		_adc_read
  2068 ;;		i1_pwm_duty_cycle
  2069 ;;		i1_tmr0_reload
  2070 ;; This function is called by:
  2071 ;;		Interrupt level 1
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075  001F                     _isr:	
  2076                           ;psect for function _isr
  2077                           
  2078  001F                     i1l1356:
  2079                           
  2080                           ;main.c: 52:     if(INTCONbits.T0IF){
  2081  001F  1D0B               	btfss	11,2	;volatile
  2082  0020  2822               	goto	u20_21
  2083  0021  2823               	goto	u20_20
  2084  0022                     u20_21:
  2085  0022  2837               	goto	i1l1362
  2086  0023                     u20_20:
  2087  0023                     i1l1358:
  2088                           
  2089                           ;main.c: 53:         PORTAbits.RA0 = !PORTAbits.RA0;
  2090  0023  1003               	clrc
  2091  0024  1283               	bcf	3,5	;RP0=0, select bank0
  2092  0025  1303               	bcf	3,6	;RP1=0, select bank0
  2093  0026  1C05               	btfss	5,0	;volatile
  2094  0027  1403               	setc
  2095  0028  1803               	btfsc	3,0
  2096  0029  282B               	goto	u21_21
  2097  002A  282F               	goto	u21_20
  2098  002B                     u21_21:
  2099  002B  1283               	bcf	3,5	;RP0=0, select bank0
  2100  002C  1303               	bcf	3,6	;RP1=0, select bank0
  2101  002D  1405               	bsf	5,0	;volatile
  2102  002E  2832               	goto	u22_24
  2103  002F                     u21_20:
  2104  002F  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0030  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0031  1005               	bcf	5,0	;volatile
  2107  0032                     u22_24:
  2108  0032                     i1l1360:
  2109                           
  2110                           ;main.c: 54:         tmr0_reload();
  2111  0032  120A  118A  232C  120A  118A  	fcall	i1_tmr0_reload
  2112  0037                     i1l1362:
  2113                           
  2114                           ;main.c: 56:     if(PIR1bits.ADIF){
  2115  0037  1283               	bcf	3,5	;RP0=0, select bank0
  2116  0038  1303               	bcf	3,6	;RP1=0, select bank0
  2117  0039  1F0C               	btfss	12,6	;volatile
  2118  003A  283C               	goto	u23_21
  2119  003B  283D               	goto	u23_20
  2120  003C                     u23_21:
  2121  003C  2851               	goto	i1l1366
  2122  003D                     u23_20:
  2123  003D                     i1l1364:
  2124                           
  2125                           ;main.c: 57:         PORTD = adc_read()>>4;
  2126  003D  120A  118A  231B  120A  118A  	fcall	_adc_read
  2127  0042  0870               	movf	?_adc_read,w
  2128  0043  00F6               	movwf	??_isr
  2129  0044  0871               	movf	?_adc_read+1,w
  2130  0045  00F7               	movwf	??_isr+1
  2131  0046  3004               	movlw	4
  2132  0047  00FF               	movwf	btemp+1
  2133  0048                     u24_25:
  2134  0048  0D77               	rlf	??_isr+1,w
  2135  0049  0CF7               	rrf	??_isr+1,f
  2136  004A  0CF6               	rrf	??_isr,f
  2137  004B  0BFF               	decfsz	btemp+1,f
  2138  004C  2848               	goto	u24_25
  2139  004D  0876               	movf	??_isr,w
  2140  004E  1283               	bcf	3,5	;RP0=0, select bank0
  2141  004F  1303               	bcf	3,6	;RP1=0, select bank0
  2142  0050  0088               	movwf	8	;volatile
  2143  0051                     i1l1366:
  2144                           
  2145                           ;main.c: 59:     if(PIR1bits.TMR2IF){
  2146  0051  1C8C               	btfss	12,1	;volatile
  2147  0052  2854               	goto	u25_21
  2148  0053  2855               	goto	u25_20
  2149  0054                     u25_21:
  2150  0054  2888               	goto	i1l73
  2151  0055                     u25_20:
  2152  0055                     i1l1368:
  2153                           
  2154                           ;main.c: 60:         contador++;
  2155  0055  3001               	movlw	1
  2156  0056  00F6               	movwf	??_isr
  2157  0057  0876               	movf	??_isr,w
  2158  0058  07FD               	addwf	_contador,f
  2159                           
  2160                           ;main.c: 61:         if (bandera){
  2161  0059  0826               	movf	_bandera,w
  2162  005A  1903               	btfsc	3,2
  2163  005B  285D               	goto	u26_21
  2164  005C  285E               	goto	u26_20
  2165  005D                     u26_21:
  2166  005D  2879               	goto	i1l1378
  2167  005E                     u26_20:
  2168  005E                     i1l1370:
  2169                           
  2170                           ;main.c: 62:             if (contador == 57){
  2171  005E  3039               	movlw	57
  2172  005F  067D               	xorwf	_contador,w
  2173  0060  1D03               	btfss	3,2
  2174  0061  2863               	goto	u27_21
  2175  0062  2864               	goto	u27_20
  2176  0063                     u27_21:
  2177  0063  2866               	goto	i1l1374
  2178  0064                     u27_20:
  2179  0064                     i1l1372:
  2180                           
  2181                           ;main.c: 63:                 bandera = 0;
  2182  0064  01A6               	clrf	_bandera
  2183                           
  2184                           ;main.c: 64:                 contador = 0;
  2185  0065  01FD               	clrf	_contador
  2186  0066                     i1l1374:
  2187                           
  2188                           ;main.c: 66:             ciclo_trabajo++;
  2189  0066  3001               	movlw	1
  2190  0067  00F6               	movwf	??_isr
  2191  0068  0876               	movf	??_isr,w
  2192  0069  07FC               	addwf	_ciclo_trabajo,f
  2193  006A                     i1l1376:
  2194                           
  2195                           ;main.c: 67:             pwm_duty_cycle(ciclo_trabajo,1);
  2196  006A  087C               	movf	_ciclo_trabajo,w
  2197  006B  00F6               	movwf	??_isr
  2198  006C  01F7               	clrf	??_isr+1
  2199  006D  0876               	movf	??_isr,w
  2200  006E  00F0               	movwf	i1pwm_duty_cycle@duty_cycle
  2201  006F  0877               	movf	??_isr+1,w
  2202  0070  00F1               	movwf	i1pwm_duty_cycle@duty_cycle+1
  2203  0071  01F2               	clrf	i1pwm_duty_cycle@channel
  2204  0072  0AF2               	incf	i1pwm_duty_cycle@channel,f
  2205  0073  120A  118A  2168  120A  118A  	fcall	i1_pwm_duty_cycle
  2206                           
  2207                           ;main.c: 68:         }
  2208  0078  2885               	goto	i1l1388
  2209  0079                     i1l1378:
  2210                           
  2211                           ;main.c: 70:             if (contador == 57){
  2212  0079  3039               	movlw	57
  2213  007A  067D               	xorwf	_contador,w
  2214  007B  1D03               	btfss	3,2
  2215  007C  287E               	goto	u28_21
  2216  007D  287F               	goto	u28_20
  2217  007E                     u28_21:
  2218  007E  2882               	goto	i1l1384
  2219  007F                     u28_20:
  2220  007F                     i1l1380:
  2221                           
  2222                           ;main.c: 71:                 bandera = 1;
  2223  007F  01A6               	clrf	_bandera
  2224  0080  0AA6               	incf	_bandera,f
  2225  0081                     i1l1382:
  2226                           
  2227                           ;main.c: 72:                 contador = 0;
  2228  0081  01FD               	clrf	_contador
  2229  0082                     i1l1384:
  2230                           
  2231                           ;main.c: 74:             ciclo_trabajo--;
  2232  0082  3001               	movlw	1
  2233  0083  02FC               	subwf	_ciclo_trabajo,f
  2234  0084  286A               	goto	i1l1376
  2235  0085                     i1l1388:
  2236                           
  2237                           ;main.c: 77:         PIR1bits.TMR2IF = 0;
  2238  0085  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0086  1303               	bcf	3,6	;RP1=0, select bank0
  2240  0087  108C               	bcf	12,1	;volatile
  2241  0088                     i1l73:
  2242  0088  087B               	movf	??_isr+5,w
  2243  0089  00FF               	movwf	btemp+1
  2244  008A  087A               	movf	??_isr+4,w
  2245  008B  008A               	movwf	10
  2246  008C  0879               	movf	??_isr+3,w
  2247  008D  0084               	movwf	4
  2248  008E  0E78               	swapf	??_isr+2,w
  2249  008F  0083               	movwf	3
  2250  0090  0EFE               	swapf	btemp,f
  2251  0091  0E7E               	swapf	btemp,w
  2252  0092  0009               	retfie
  2253  0093                     __end_of_isr:
  2254                           
  2255                           	psect	intentry
  2256  0004                     __pintentry:	
  2257                           ;incstack = 0
  2258                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2259                           
  2260  0004                     interrupt_function:
  2261  007E                     saved_w	set	btemp
  2262  0004  00FE               	movwf	btemp
  2263  0005  0E03               	swapf	3,w
  2264  0006  00F8               	movwf	??_isr+2
  2265  0007  0804               	movf	4,w
  2266  0008  00F9               	movwf	??_isr+3
  2267  0009  080A               	movf	10,w
  2268  000A  00FA               	movwf	??_isr+4
  2269  000B  087F               	movf	btemp+1,w
  2270  000C  00FB               	movwf	??_isr+5
  2271  000D  120A  118A  281F   	ljmp	_isr
  2272                           
  2273                           	psect	text10
  2274  032C                     __ptext10:	
  2275 ;; *************** function i1_tmr0_reload *****************
  2276 ;; Defined at:
  2277 ;;		line 40 in file "tmr0.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2291 ;;      Params:         0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0
  2294 ;;      Totals:         0       0       0       0       0
  2295 ;;Total ram usage:        0 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_isr
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304  032C                     i1_tmr0_reload:	
  2305                           ;psect for function i1_tmr0_reload
  2306                           
  2307  032C                     i1l1336:	
  2308                           ;incstack = 0
  2309                           ; Regs used in i1_tmr0_reload: [wreg]
  2310                           
  2311                           
  2312                           ;tmr0.c: 41:     TMR0 = 12;
  2313  032C  300C               	movlw	12
  2314  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2315  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2316  032F  0081               	movwf	1	;volatile
  2317  0330                     i1l1338:
  2318                           
  2319                           ;tmr0.c: 42:     INTCONbits.T0IF = 0;
  2320  0330  110B               	bcf	11,2	;volatile
  2321  0331                     i1l141:
  2322  0331  0008               	return
  2323  0332                     __end_ofi1_tmr0_reload:
  2324                           
  2325                           	psect	text11
  2326  0168                     __ptext11:	
  2327 ;; *************** function i1_pwm_duty_cycle *****************
  2328 ;; Defined at:
  2329 ;;		line 29 in file "pwm.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  duty_cycle      2    0[COMMON] unsigned int 
  2332 ;;  channel         1    2[COMMON] unsigned char 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         3       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0
  2346 ;;      Temps:          3       0       0       0       0
  2347 ;;      Totals:         6       0       0       0       0
  2348 ;;Total ram usage:        6 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_isr
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357  0168                     i1_pwm_duty_cycle:	
  2358                           ;psect for function i1_pwm_duty_cycle
  2359                           
  2360  0168                     i1l1340:	
  2361                           ;incstack = 0
  2362                           ; Regs used in i1_pwm_duty_cycle: [wreg-fsr0h+status,2+status,0]
  2363                           
  2364                           
  2365                           ;pwm.c: 30:     if (duty_cycle < 1024){
  2366  0168  3004               	movlw	4
  2367  0169  0271               	subwf	i1pwm_duty_cycle@duty_cycle+1,w
  2368  016A  3000               	movlw	0
  2369  016B  1903               	skipnz
  2370  016C  0270               	subwf	i1pwm_duty_cycle@duty_cycle,w
  2371  016D  1803               	skipnc
  2372  016E  2970               	goto	u19_21
  2373  016F  2971               	goto	u19_20
  2374  0170                     u19_21:
  2375  0170  29C3               	goto	i1l176
  2376  0171                     u19_20:
  2377  0171  29B3               	goto	i1l1350
  2378  0172                     i1l1344:
  2379                           
  2380                           ;pwm.c: 33:                 CCPR1L = duty_cycle>>2;
  2381  0172  0871               	movf	i1pwm_duty_cycle@duty_cycle+1,w
  2382  0173  00F4               	movwf	??i1_pwm_duty_cycle+1
  2383  0174  0870               	movf	i1pwm_duty_cycle@duty_cycle,w
  2384  0175  00F3               	movwf	??i1_pwm_duty_cycle
  2385  0176  1003               	clrc
  2386  0177  0CF4               	rrf	??i1_pwm_duty_cycle+1,f
  2387  0178  0CF3               	rrf	??i1_pwm_duty_cycle,f
  2388  0179  1003               	clrc
  2389  017A  0CF4               	rrf	??i1_pwm_duty_cycle+1,f
  2390  017B  0CF3               	rrf	??i1_pwm_duty_cycle,f
  2391  017C  0873               	movf	??i1_pwm_duty_cycle,w
  2392  017D  1283               	bcf	3,5	;RP0=0, select bank0
  2393  017E  1303               	bcf	3,6	;RP1=0, select bank0
  2394  017F  0095               	movwf	21	;volatile
  2395                           
  2396                           ;pwm.c: 34:                 CCP1CONbits.DC1B = duty_cycle & 0b11;
  2397  0180  0870               	movf	i1pwm_duty_cycle@duty_cycle,w
  2398  0181  3903               	andlw	3
  2399  0182  00F3               	movwf	??i1_pwm_duty_cycle
  2400  0183  0EF3               	swapf	??i1_pwm_duty_cycle,f
  2401  0184  0817               	movf	23,w	;volatile
  2402  0185  0673               	xorwf	??i1_pwm_duty_cycle,w
  2403  0186  39CF               	andlw	-49
  2404  0187  0673               	xorwf	??i1_pwm_duty_cycle,w
  2405  0188  0097               	movwf	23	;volatile
  2406                           
  2407                           ;pwm.c: 35:                 break;
  2408  0189  29C3               	goto	i1l176
  2409  018A                     i1l1346:
  2410                           
  2411                           ;pwm.c: 37:                 CCPR2L = duty_cycle>>2;
  2412  018A  0871               	movf	i1pwm_duty_cycle@duty_cycle+1,w
  2413  018B  00F4               	movwf	??i1_pwm_duty_cycle+1
  2414  018C  0870               	movf	i1pwm_duty_cycle@duty_cycle,w
  2415  018D  00F3               	movwf	??i1_pwm_duty_cycle
  2416  018E  1003               	clrc
  2417  018F  0CF4               	rrf	??i1_pwm_duty_cycle+1,f
  2418  0190  0CF3               	rrf	??i1_pwm_duty_cycle,f
  2419  0191  1003               	clrc
  2420  0192  0CF4               	rrf	??i1_pwm_duty_cycle+1,f
  2421  0193  0CF3               	rrf	??i1_pwm_duty_cycle,f
  2422  0194  0873               	movf	??i1_pwm_duty_cycle,w
  2423  0195  1283               	bcf	3,5	;RP0=0, select bank0
  2424  0196  1303               	bcf	3,6	;RP1=0, select bank0
  2425  0197  009B               	movwf	27	;volatile
  2426                           
  2427                           ;pwm.c: 38:                 CCP2CONbits.DC2B0 = duty_cycle & 0b1;
  2428  0198  0870               	movf	i1pwm_duty_cycle@duty_cycle,w
  2429  0199  3901               	andlw	1
  2430  019A  00F3               	movwf	??i1_pwm_duty_cycle
  2431  019B  0EF3               	swapf	??i1_pwm_duty_cycle,f
  2432  019C  081D               	movf	29,w	;volatile
  2433  019D  0673               	xorwf	??i1_pwm_duty_cycle,w
  2434  019E  39EF               	andlw	-17
  2435  019F  0673               	xorwf	??i1_pwm_duty_cycle,w
  2436  01A0  009D               	movwf	29	;volatile
  2437                           
  2438                           ;pwm.c: 39:                 CCP2CONbits.DC2B1 = duty_cycle>>1 & 0b1;
  2439  01A1  0871               	movf	i1pwm_duty_cycle@duty_cycle+1,w
  2440  01A2  00F4               	movwf	??i1_pwm_duty_cycle+1
  2441  01A3  0870               	movf	i1pwm_duty_cycle@duty_cycle,w
  2442  01A4  00F3               	movwf	??i1_pwm_duty_cycle
  2443  01A5  1003               	clrc
  2444  01A6  0CF4               	rrf	??i1_pwm_duty_cycle+1,f
  2445  01A7  0CF3               	rrf	??i1_pwm_duty_cycle,f
  2446  01A8  0873               	movf	??i1_pwm_duty_cycle,w
  2447  01A9  3901               	andlw	1
  2448  01AA  00F5               	movwf	??i1_pwm_duty_cycle+2
  2449  01AB  0EF5               	swapf	??i1_pwm_duty_cycle+2,f
  2450  01AC  0DF5               	rlf	??i1_pwm_duty_cycle+2,f
  2451  01AD  081D               	movf	29,w	;volatile
  2452  01AE  0675               	xorwf	??i1_pwm_duty_cycle+2,w
  2453  01AF  39DF               	andlw	-33
  2454  01B0  0675               	xorwf	??i1_pwm_duty_cycle+2,w
  2455  01B1  009D               	movwf	29	;volatile
  2456                           
  2457                           ;pwm.c: 40:                 break;
  2458  01B2  29C3               	goto	i1l176
  2459  01B3                     i1l1350:
  2460  01B3  0872               	movf	i1pwm_duty_cycle@channel,w
  2461  01B4  00F3               	movwf	??i1_pwm_duty_cycle
  2462  01B5  01F4               	clrf	??i1_pwm_duty_cycle+1
  2463                           
  2464                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2465                           ; Switch size 1, requested type "simple"
  2466                           ; Number of cases is 1, Range of values is 0 to 0
  2467                           ; switch strategies available:
  2468                           ; Name         Instructions Cycles
  2469                           ; simple_byte            4     3 (average)
  2470                           ; direct_byte           11     8 (fixed)
  2471                           ; jumptable            260     6 (fixed)
  2472                           ;	Chosen strategy is simple_byte
  2473  01B6  0874               	movf	??i1_pwm_duty_cycle+1,w
  2474  01B7  3A00               	xorlw	0	; case 0
  2475  01B8  1903               	skipnz
  2476  01B9  29BB               	goto	i1l1556
  2477  01BA  29C3               	goto	i1l176
  2478  01BB                     i1l1556:
  2479                           
  2480                           ; Switch size 1, requested type "simple"
  2481                           ; Number of cases is 2, Range of values is 1 to 2
  2482                           ; switch strategies available:
  2483                           ; Name         Instructions Cycles
  2484                           ; simple_byte            7     4 (average)
  2485                           ; direct_byte           17    11 (fixed)
  2486                           ; jumptable            263     9 (fixed)
  2487                           ;	Chosen strategy is simple_byte
  2488  01BB  0873               	movf	??i1_pwm_duty_cycle,w
  2489  01BC  3A01               	xorlw	1	; case 1
  2490  01BD  1903               	skipnz
  2491  01BE  2972               	goto	i1l1344
  2492  01BF  3A03               	xorlw	3	; case 2
  2493  01C0  1903               	skipnz
  2494  01C1  298A               	goto	i1l1346
  2495  01C2  29C3               	goto	i1l176
  2496  01C3                     i1l176:
  2497  01C3  0008               	return
  2498  01C4                     __end_ofi1_pwm_duty_cycle:
  2499                           
  2500                           	psect	text12
  2501  031B                     __ptext12:	
  2502 ;; *************** function _adc_read *****************
  2503 ;; Defined at:
  2504 ;;		line 47 in file "adc.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  2    0[COMMON] int 
  2511 ;; Registers used:
  2512 ;;		wreg
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2518 ;;      Params:         2       0       0       0       0
  2519 ;;      Locals:         0       0       0       0       0
  2520 ;;      Temps:          2       0       0       0       0
  2521 ;;      Totals:         4       0       0       0       0
  2522 ;;Total ram usage:        4 bytes
  2523 ;; Hardware stack levels used: 1
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_isr
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531  031B                     _adc_read:	
  2532                           ;psect for function _adc_read
  2533                           
  2534  031B                     i1l1284:	
  2535                           ;incstack = 0
  2536                           ; Regs used in _adc_read: [wreg]
  2537                           
  2538                           
  2539                           ;adc.c: 48:     PIR1bits.ADIF = 0;
  2540  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2541  031C  1303               	bcf	3,6	;RP1=0, select bank0
  2542  031D  130C               	bcf	12,6	;volatile
  2543  031E                     i1l1286:
  2544                           
  2545                           ;adc.c: 49:     return (ADRESH);
  2546  031E  081E               	movf	30,w	;volatile
  2547  031F  00F2               	movwf	??_adc_read
  2548  0320  01F3               	clrf	??_adc_read+1
  2549  0321  0872               	movf	??_adc_read,w
  2550  0322  00F0               	movwf	?_adc_read
  2551  0323  0873               	movf	??_adc_read+1,w
  2552  0324  00F1               	movwf	?_adc_read+1
  2553  0325                     i1l118:
  2554  0325  0008               	return
  2555  0326                     __end_of_adc_read:
  2556  007E                     btemp	set	126	;btemp
  2557  007E                     wtemp0	set	126
  2558                           
  2559                           	psect	idloc
  2560                           
  2561                           ;Config register IDLOC0 @ 0x2000
  2562                           ;	unspecified, using default values
  2563  2000                     	org	8192
  2564  2000  3FFF               	dw	16383
  2565                           
  2566                           ;Config register IDLOC1 @ 0x2001
  2567                           ;	unspecified, using default values
  2568  2001                     	org	8193
  2569  2001  3FFF               	dw	16383
  2570                           
  2571                           ;Config register IDLOC2 @ 0x2002
  2572                           ;	unspecified, using default values
  2573  2002                     	org	8194
  2574  2002  3FFF               	dw	16383
  2575                           
  2576                           ;Config register IDLOC3 @ 0x2003
  2577                           ;	unspecified, using default values
  2578  2003                     	org	8195
  2579  2003  3FFF               	dw	16383
  2580                           
  2581                           	psect	config
  2582                           
  2583                           ;Config register CONFIG1 @ 0x2007
  2584                           ;	Oscillator Selection bits
  2585                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2586                           ;	Watchdog Timer Enable bit
  2587                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2588                           ;	Power-up Timer Enable bit
  2589                           ;	PWRTE = OFF, PWRT disabled
  2590                           ;	RE3/MCLR pin function select bit
  2591                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2592                           ;	Code Protection bit
  2593                           ;	CP = OFF, Program memory code protection is disabled
  2594                           ;	Data Code Protection bit
  2595                           ;	CPD = OFF, Data memory code protection is disabled
  2596                           ;	Brown Out Reset Selection bits
  2597                           ;	BOREN = OFF, BOR disabled
  2598                           ;	Internal External Switchover bit
  2599                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2600                           ;	Fail-Safe Clock Monitor Enabled bit
  2601                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2602                           ;	Low Voltage Programming Enable bit
  2603                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2604                           ;	In-Circuit Debugger Mode bit
  2605                           ;	DEBUG = 0x1, unprogrammed default
  2606  2007                     	org	8199
  2607  2007  20D4               	dw	8404
  2608                           
  2609                           ;Config register CONFIG2 @ 0x2008
  2610                           ;	Brown-out Reset Selection bit
  2611                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2612                           ;	Flash Program Memory Self Write Enable bits
  2613                           ;	WRT = OFF, Write protection off
  2614  2008                     	org	8200
  2615  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      6       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_pwm_duty_cycle

Critical Paths under _main in BANK0

    _setup->_pwm_duty_cycle

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1062
                          _adc_start
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1018
                           _adc_init
                       _init_osc_MHz
                     _pwm_duty_cycle
                           _pwm_init
                          _tmr0_init
                        _tmr0_reload
 ---------------------------------------------------------------------------------
 (2) _tmr0_reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _pwm_init                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pwm_duty_cycle                                       6     3      3     658
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _init_osc_MHz                                         3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             5     3      2     218
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_start                                            2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  6     6      0     258
                                              6 COMMON     6     6      0
                           _adc_read
                   i1_pwm_duty_cycle
                      i1_tmr0_reload
 ---------------------------------------------------------------------------------
 (4) i1_tmr0_reload                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) i1_pwm_duty_cycle                                     6     3      3     258
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (4) _adc_read                                             4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_start
   _setup
     _adc_init
     _init_osc_MHz
     _pwm_duty_cycle
     _pwm_init
     _tmr0_init
     _tmr0_reload

 _isr (ROOT)
   _adc_read
   i1_pwm_duty_cycle
   i1_tmr0_reload

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6       7       5        8.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      15      12        0.0%
ABS                  0      0      15       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Jul 23 09:34:20 2022

                        l13 02B4                          l84 00F1                          l86 00F5  
                        l87 0103                         l112 0307                         l115 030B  
                       l107 0269                         l141 032B                         l138 0167  
                       l167 02E7                         l176 021D                         u150 01CF  
                       u151 01CE                         u160 00F5                         u161 00F4  
                       u170 02F1                         u307 0301                         u171 02F0  
                       u180 030B                         u181 030A                         _PR2 0092  
                       u297 0266                         _isr 001F                         fsr0 0004  
                      l1200 011C                        l1202 0123                        l1204 012A  
                      l1212 013D                        l1300 00C4                        l1150 026D  
                      l1230 02BE                        l1206 0131                        l1214 0163  
                      l1310 00DE                        l1302 00D1                        l1160 028B  
                      l1152 0271                        l1240 02CE                        l1232 02C3  
                      l1216 0166                        l1208 0138                        l1320 00FA  
                      l1312 00EB                        l1304 00D2                        l1330 02FB  
                      l1162 0292                        l1154 0278                        l1242 02CF  
                      l1234 02C4                        l1226 02B8                        l1322 00FD  
                      l1314 00EE                        l1306 00D3                        l1332 02FD  
                      l1260 022A                        l1156 027F                        l1180 01D0  
                      l1244 02D3                        l1236 02C6                        l1228 02BC  
                      l1172 0326                        l1324 0100                        l1316 00F0  
                      l1308 00D4                        l1334 0304                        l1326 02EB  
                      l1270 0258                        l1262 022F                        l1254 0221  
                      l1158 0286                        l1166 0299                        l1182 01E6  
                      l1238 02CA                        l1174 032A                        l1318 00F6  
                      l1328 02F1                        l1272 025C                        l1256 0222  
                      l1176 01C4                        l1248 02D7                        l1192 0104  
                      l1274 025F                        l1258 0225                        l1266 0232  
                      l1186 020D                        l1194 0109                        l1290 0093  
                      l1276 0262                        l1268 0248                        l1196 010E  
                      l1292 00A8                        l1550 0215                        l1198 0115  
                      l1294 00AE                        l1390 030C                        l1552 02A3  
                      l1544 0147                        l1296 00B3                        l1392 0311  
                      l1554 023A                        l1546 015E                        l1298 00BE  
                      l1548 02DF                        ?_isr 0070                        i1l73 0088  
                      _TMR0 0001                        _main 030C                        btemp 007E  
                      start 0010              _pwm_duty_cycle 01C4                       ??_isr 0076  
                     ?_main 0070                       _ANSEL 0188                       i1l141 0331  
                     i1l118 0325                       i1l176 01C3                       u20_20 0023  
                     u20_21 0022                       u21_20 002F                       u21_21 002B  
                     u22_24 0032                       u23_20 003D                       u23_21 003C  
                     u24_25 0048                       u25_20 0055                       u25_21 0054  
                     u26_20 005E                       u26_21 005D                       u19_20 0171  
                     u27_20 0064                       u19_21 0170                       u27_21 0063  
                     _PORTA 0005                       _PORTC 0007                       _PORTD 0008  
                     u28_20 007F                       u28_21 007E                       _TRISA 0085  
                     _TRISC 0087                       _TRISD 0088            adc_start@channel 0021  
        adc_init@vref_minus 0021                       _setup 0093                       pclath 000A  
                     status 0003                       wtemp0 007E      __end_of_pwm_duty_cycle 021E  
           __initialization 0013                __end_of_main 031B                      ??_main 0026  
              ?_tmr0_reload 0070                      _ADRESH 001E                      _CCPR1L 0015  
                    _CCPR2L 001B                      ?_setup 0070            __end_of_adc_init 026A  
          __end_of_adc_read 0326                      i1l1340 0168                      i1l1350 01B3  
                    i1l1344 0172                      i1l1336 032C                      i1l1360 0032  
                    i1l1346 018A                      i1l1338 0330                      i1l1370 005E  
                    i1l1362 0037                      i1l1284 031B                      i1l1380 007F  
                    i1l1372 0064                      i1l1364 003D                      i1l1356 001F  
                    i1l1286 031E                      i1l1382 0081                      i1l1374 0066  
                    i1l1366 0051                      i1l1358 0023                      i1l1384 0082  
                    i1l1376 006A                      i1l1368 0055                      i1l1378 0079  
                    i1l1556 01BB                      i1l1388 0085               ?_init_osc_MHz 0070  
           ?_pwm_duty_cycle 0020            init_osc_MHz@freq 0022                      saved_w 007E  
          __end_of_pwm_init 02E8             pwm_init@channel 0022     __end_of__initialization 001B  
            ??_init_osc_MHz 0020              __pcstackCOMMON 0070                __pidataBANK0 0332  
             __end_of_setup 0104              _OPTION_REGbits 0081              adc_init@adc_cs 0024  
                   ??_setup 0026                  __pmaintext 030C                  __pintentry 0004  
                   _CCP1CON 0017                     _CCP2CON 001D                   ?_adc_init 0020  
                 ?_adc_read 0070           __end_of_adc_start 030C            i1_pwm_duty_cycle 0168  
                 ?_pwm_init 0070                     _bandera 0026                  ??_adc_init 0022  
                ??_adc_read 0072                     __ptext1 0093                     __ptext2 0326  
                   __ptext3 0104                     __ptext4 02B5                     __ptext5 01C4  
                   __ptext6 026A                     __ptext7 021E                     __ptext8 02E8  
                   __ptext9 001F        __end_of_init_osc_MHz 02B5                   _T2CONbits 0012  
             i1_tmr0_reload 032C        end_of_initialization 001B           __end_of_tmr0_init 0168  
          ??_pwm_duty_cycle 0023                  ??_pwm_init 0020                   _PORTAbits 0005  
                 _TRISCbits 0087              ?i1_tmr0_reload 0070                 _CCP1CONbits 0017  
               _CCP2CONbits 001D           adc_init@vref_plus 0020         start_initialization 0013  
               __end_of_isr 0093    __end_ofi1_pwm_duty_cycle 01C4                 __pdataBANK0 0026  
             _ciclo_trabajo 007C             ??i1_tmr0_reload 0070                 __pbssCOMMON 007C  
                 ___latbits 0002               __pcstackBANK0 0020                   _adc_start 02E8  
              _init_osc_MHz 026A    pwm_duty_cycle@duty_cycle 0020               ??_tmr0_reload 0020  
                ?_adc_start 0070           interrupt_function 0004  i1pwm_duty_cycle@duty_cycle 0070  
                 _tmr0_init 0104                    _PIE1bits 008C                    _PIR1bits 000C  
        tmr0_init@prescaler 0020                  _ADCON0bits 001F                  _ADCON1bits 009F  
       __end_of_tmr0_reload 032C                  ?_tmr0_init 0020     i1pwm_duty_cycle@channel 0072  
                  _adc_init 021E                    _adc_read 031B                    __ptext10 032C  
                  __ptext11 0168                    __ptext12 031B                 ??_adc_start 0020  
                  _contador 007D           ?i1_pwm_duty_cycle 0070                    _pwm_init 02B5  
        ??i1_pwm_duty_cycle 0073                  _INTCONbits 000B                 _tmr0_reload 0326  
                  intlevel1 0000                 ??_tmr0_init 0022                  _OSCCONbits 008F  
     pwm_duty_cycle@channel 0022       __end_ofi1_tmr0_reload 0332  
